---
http_interactions:
- request:
    method: get
    uri: https://www.wired.com/feed/tag/ai/latest/rss
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 429
      message: OK
    headers:
      Content-Type:
      - application/xml
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 01 Jul 2024 20:00:40 GMT
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=300, stale-while-revalidate=60, stale-if-error=86400
      Vary:
      - accept-encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 65a58be43205cfcc90ed14f842775fb0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - YVR52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - ZszjYVR1mlOsPRF7aROvqVoMQBZXwumqoXOXSr8Ainhmzd9-Cslg9w==
      Age:
      - '584'
    body:
      encoding: ASCII-8BIT
      string: ""
  recorded_at: Mon, 01 Jul 2024 20:10:24 GMT
- request:
    method: get
    uri: https://www.wired.com/feed/category/security/latest/rss
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 01 Jul 2024 19:50:37 GMT
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=300, stale-while-revalidate=60, stale-if-error=86400
      Vary:
      - accept-encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 8e0bcfe5caa94f91b796da3f5a12c1fe.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - YVR52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - w6jYHs3wXCIQTGJcvEJNzGrMf8PJb7zt4Rx79EZmg9kgMt3tw7dNXw==
      Age:
      - '1187'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48cnNzIHhtbG5zOmF0b209Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczptZWRpYT0iaHR0cDovL3NlYXJjaC55YWhvby5jb20vbXJzcy8iIHZlcnNpb249IjIuMCI+PGNoYW5uZWw+PHRpdGxlPlNlY3VyaXR5IExhdGVzdDwvdGl0bGU+PGRlc2NyaXB0aW9uPkNoYW5uZWwgRGVzY3JpcHRpb248L2Rlc2NyaXB0aW9uPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbTwvbGluaz48YXRvbTpsaW5rIGhyZWY9Imh0dHBzOi8vd3d3LndpcmVkLmNvbS9mZWVkL2NhdGVnb3J5L3NlY3VyaXR5L2xhdGVzdC9yc3MiIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vYXRvbSt4bWwiLz48Y29weXJpZ2h0PsKpIENvbmTDqSBOYXN0IDIwMjQ8L2NvcHlyaWdodD48bGFuZ3VhZ2U+ZW4tVVM8L2xhbmd1YWdlPjxsYXN0QnVpbGREYXRlPk1vbiwgMDEgSnVsIDIwMjQgMTk6NTA6MzcgKzAwMDA8L2xhc3RCdWlsZERhdGU+PGl0ZW0+PHRpdGxlPlRoZSBQcm9ibGVtIHRoZSBVUyBUaWtUb2sgQ3JhY2tkb3duIGFuZCBLYXNwZXJza3kgQmFuIEhhdmUgaW4gQ29tbW9uPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvdGlrdG9rLWthc3BlcnNreS11cy1iYW4taW50ZXJuZXQtZnJlZWRvbS88L2xpbms+PGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj42Njc5YzdkYjMzZWFjN2E3MTBkNmU2ZDY8L2d1aWQ+PHB1YkRhdGU+TW9uLCAwMSBKdWwgMjAyNCAxMDozMDowMCArMDAwMDwvcHViRGF0ZT48bWVkaWE6Y29udGVudC8+PGRlc2NyaXB0aW9uPldoaWxlIEthc3BlcnNreSBhbmQgVGlrVG9rIG1ha2UgdmVyeSBkaWZmZXJlbnQga2luZHMgb2Ygc29mdHdhcmUsIHRoZSBVUyBoYXMgdGFyZ2V0ZWQgYm90aCBvdmVyIG5hdGlvbmFsIHNlY3VyaXR5IGNvbmNlcm5zLiBCdXQgdGhlIGxvb21pbmcgYmFucyBoYXZlIGxhcmdlciBpbXBsaWNhdGlvbnMgZm9yIGludGVybmV0IGZyZWVkb20uPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIE5hdGlvbmFsIFNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBDeWJlcmF0dGFja3MgYW5kIEhhY2tzPC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBTZWN1cml0eSBOZXdzPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+VGlrVG9rLCBFdWdlbmUgS2FzcGVyc2t5LCBJbnRlcm5ldCwgZnJlZSBzcGVlY2gsIG5hdGlvbmFsIHNlY3VyaXR5LCBkaXNpbmZvcm1hdGlvbiwgY3liZXJhdHRhY2tzPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5MaWx5IEhheSBOZXdtYW48L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0Pk5hbm55IFN0YXRlPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3ZWM3Yzc0YTA5MTU5ZDk4ZjUxNjYyL21hc3Rlci9wYXNzL0thc3BlcnNreS1UaWtUb2stQW5hbHlzaXMtU2VjdXJpdHkuanBnIiB3aWR0aD0iMjQwMCIgaGVpZ2h0PSIxNjAwIi8+PC9pdGVtPjxpdGVtPjx0aXRsZT5UaGUgVVMgV2FudHMgdG8gSW50ZWdyYXRlIHRoZSBDb21tZXJjaWFsIFNwYWNlIEluZHVzdHJ5IFdpdGggSXRzIE1pbGl0YXJ5IHRvIFByZXZlbnQgQ3liZXIgQXR0YWNrczwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L3NwYWNlLWN5YmVyLWF0dGFja3Mtc2VjdXJpdHkvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3OTZhNTEzZTlmNmE4OTViYzVkZGVmPC9ndWlkPjxwdWJEYXRlPlNhdCwgMjkgSnVuIDIwMjQgMTI6MDA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5BcyBtb3JlIGFuZCBtb3JlIGluZnJhc3RydWN0dXJlIGlzIGRlcGxveWVkIGluIHNwYWNlLCB0aGUgcmlzayBvZiBjeWJlciBhdHRhY2tzIGluY3JlYXNlcy4gVGhlIFVTIG1pbGl0YXJ5IHdhbnRzIHRvIHRlYW0gdXAgd2l0aCB0aGUgcHJpdmF0ZSBzZWN0b3IgdG8gcHJvdGVjdCBhc3NldHMgZXZlcnlvbmUgcmVsaWVzIG9uLjwvZGVzY3JpcHRpb24+PGNhdGVnb3J5PlNjaWVuY2U8L2NhdGVnb3J5PjxjYXRlZ29yeT5TY2llbmNlIC8gU3BhY2U8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PG1lZGlhOmtleXdvcmRzPnNjaWVuY2UsIHNwYWNlLCBzZWN1cml0eSwgY3liZXJhdHRhY2tzLCBjeWJlcnNlY3VyaXR5PC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5TaGFyb24gTGVtYWMtVmluY2VyZTwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+T25seSBTYXRlbGxpdGVzPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3ZjBkOGY1NDM5OTZlMTg4YjJhNGUzL21hc3Rlci9wYXNzLyUyMFNjaWVuY2UlMjAtJTIwQ29udmVyc2F0aW9uJTIwcGlja3VwJTIwLSUyMEp1bmUlMjAyOV9HZXR0eUltYWdlcy00OTg2OTYzNzQuanBnIiB3aWR0aD0iMTYwMCIgaGVpZ2h0PSIxMjgwIi8+PC9pdGVtPjxpdGVtPjx0aXRsZT5Hb29nbGUgSXMgUGlsb3RpbmcgRmFjZSBSZWNvZ25pdGlvbiBmb3IgT2ZmaWNlIFNlY3VyaXR5PC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvZ29vZ2xlLWZhY2UtcmVjb2duaXRpb24tb2ZmaWNlLXNhZmV0eS1zZWN1cml0eS1yb3VuZHVwLzwvbGluaz48Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPjY2N2VkZDQ2MzI3NmM2MGE2Y2FlNDZjNDwvZ3VpZD48cHViRGF0ZT5TYXQsIDI5IEp1biAyMDI0IDEwOjMwOjAwICswMDAwPC9wdWJEYXRlPjxtZWRpYTpjb250ZW50Lz48ZGVzY3JpcHRpb24+UGx1czogQSBjbG91ZCBjb21wYW55IHNheXMgbm90b3Jpb3VzIFJ1c3NpYW4gaGFja2VyIGdyb3VwIEFQVDI5IGF0dGFja2VkIGl0LCBDaGluZXNlIGhhY2tlcnMgdXNlIHJhbnNvbXdhcmUgdG8gaGlkZSB0aGVpciBlc3Bpb25hZ2UgY2FtcGFpZ25zLCBhbmQgYSBiYW5rIHBvcHVsYXIgd2l0aCBzdGFydHVwcyBkaXNjbG9zZXMgYSBjeWJlcmF0dGFjay48L2Rlc2NyaXB0aW9uPjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gQ3liZXJhdHRhY2tzIGFuZCBIYWNrczwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gTmF0aW9uYWwgU2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFByaXZhY3k8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5zZWN1cml0eSByb3VuZHVwLCBSdXNzaWEsIENoaW5hLCBjeWJlcmF0dGFja3MsIHNlY3VyaXR5LCBjeWJlcnNlY3VyaXR5LCBoYWNraW5nLCBwcml2YWN5LCBmYWNlIHJlY29nbml0aW9uPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5MaWx5IEhheSBOZXdtYW48L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0PlNlY3VyaXR5IFJvdW5kdXA8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82NjdlZTEwMDNkNTViZGYyMDhiNmJmNWIvbWFzdGVyL3Bhc3MvU2VjdXJpdHktTmV3cy1UaGlzLVdlZWstLUdvb2dsZS1Jcy1QaWxvdGluZy1GYWNpYWwtUmVjb2duaXRpb24tZm9yLU9mZmljZS1TZWN1cml0eS1HZXR0eUltYWdlcy0xMjUyNjM5MzM4LmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTYwMCIvPjwvaXRlbT48aXRlbT48dGl0bGU+UXVvcmHigJlzIENoYXRib3QgUGxhdGZvcm0gUG9lIEFsbG93cyBVc2VycyB0byBEb3dubG9hZCBQYXl3YWxsZWQgQXJ0aWNsZXMgb24gRGVtYW5kPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvcXVvcmEtY2hhdGJvdC1wb2UtZG93bmxvYWQtcGF5d2FsbGVkLWFydGljbGVzLzwvbGluaz48Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPjY2N2Q5NTEwOTNmMDA3YjdmZmM5MDExOTwvZ3VpZD48cHViRGF0ZT5GcmksIDI4IEp1biAyMDI0IDE3OjMyOjE5ICswMDAwPC9wdWJEYXRlPjxtZWRpYTpjb250ZW50Lz48ZGVzY3JpcHRpb24+V0lSRUQgd2FzIGFibGUgdG8gZG93bmxvYWQgc3RvcmllcyBmcm9tIHB1Ymxpc2hlcnMgbGlrZSBUaGUgTmV3IFlvcmsgVGltZXMgYW5kIFRoZSBBdGxhbnRpYyB1c2luZyBQb2XigJlzIEFzc2lzdGFudCBib3QuIE9uZSBleHBlcnQgY2FsbHMgaXQg4oCccHJpbWEgZmFjaWUgY29weXJpZ2h0IGluZnJpbmdlbWVudCzigJ0gd2hpY2ggUXVvcmEgZGlzcHV0ZXMuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5NZWRpYSwgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIEludGVsbGVjdHVhbCBQcm9wZXJ0eSwgQ29weXJpZ2h0PC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5UaW0gTWFyY2htYW48L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0PkNvcHkgd3Jvbmc8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82NjdkYjA2ZGRiMTEzZGMwOTE1NDk3NzUvbWFzdGVyL3Bhc3MvUXVvcmEtUG9lLUFJLUJ1c2luZXNzLTE0NTYxMTg5MzMuanBnIiB3aWR0aD0iMjQwMCIgaGVpZ2h0PSIyNDAwIi8+PC9pdGVtPjxpdGVtPjx0aXRsZT5JbnNpZGUgYSBWaW9sZW50IEdhbmcncyBSdXRobGVzcyBDcnlwdG8tU3RlYWxpbmcgSG9tZSBJbnZhc2lvbiBTcHJlZTwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L2NyeXB0by1ob21lLWludmFzaW9uLWNyaW1lLXJpbmcvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3YzcxMzhhNjUyYTQ0MmUwOTg0ZjRmPC9ndWlkPjxwdWJEYXRlPkZyaSwgMjggSnVuIDIwMjQgMTA6MzA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5Nb3JlIHRoYW4gYSBkb3plbiBtZW4gdGhyZWF0ZW5lZCwgYXNzYXVsdGVkLCB0b3J0dXJlZCwgb3Iga2lkbmFwcGVkIDExIHZpY3RpbXMgaW4gbGlrZWx5IHRoZSB3b3JzdC1ldmVyIGNyeXB0by1mb2N1c2VkIHNlcmlhbCBleHRvcnRpb24gY2FzZSBvZiBpdHMga2luZCBpbiB0aGUgVVMuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIEN5YmVyYXR0YWNrcyBhbmQgSGFja3M8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxjYXRlZ29yeT5CdXNpbmVzcyAvIEJsb2NrY2hhaW4gYW5kIENyeXB0b2N1cnJlbmN5PC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+Q3JpbWUsIGNyeXB0b2N1cnJlbmN5LCBCbG9ja2NoYWluLCBwcml2YWN5LCBiaXRjb2luPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5BbmR5IEdyZWVuYmVyZywgTWF0dCBHaWxlczwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+SGVsbCBvbiBFYXJ0aDwvZGM6c3ViamVjdD48bWVkaWE6dGh1bWJuYWlsIHVybD0iaHR0cHM6Ly9tZWRpYS53aXJlZC5jb20vcGhvdG9zLzY2N2NhYjlmMmE3NWMxMzdjMDM2ZTk0OC9tYXN0ZXIvcGFzcy9JbnNpZGUtYS1WaW9sZW50LUdhbmcncy1DcnlwdG8tU3RlYWxpbmctSG9tZS1JbnZhc2lvbi1TcHJlZS1TZWN1cml0eS5qcGciIHdpZHRoPSIyNDAwIiBoZWlnaHQ9IjE2MDAiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPkFtYXpvbiBJcyBJbnZlc3RpZ2F0aW5nIFBlcnBsZXhpdHkgT3ZlciBDbGFpbXMgb2YgU2NyYXBpbmcgQWJ1c2U8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9hd3MtcGVycGxleGl0eS1ib3Qtc2NyYXBpbmctaW52ZXN0aWdhdGlvbi88L2xpbms+PGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj42NjdkNzM0ODc0MDA1Y2FiZGMzNmEwMTA8L2d1aWQ+PHB1YkRhdGU+VGh1LCAyNyBKdW4gMjAyNCAyMjoxNToyMSArMDAwMDwvcHViRGF0ZT48bWVkaWE6Y29udGVudC8+PGRlc2NyaXB0aW9uPkFXUyBob3N0ZWQgYSBzZXJ2ZXIgbGlua2VkIHRvIHRoZSBCZXpvcyBmYW1pbHktIGFuZCBOdmlkaWEtYmFja2VkIHNlYXJjaCBzdGFydHVwIHRoYXQgYXBwZWFycyB0byBoYXZlIGJlZW4gdXNlZCB0byBzY3JhcGUgdGhlIHNpdGVzIG9mIG1ham9yIG91dGxldHMsIHByb21wdGluZyBhbiBpbnF1aXJ5IGludG8gcG90ZW50aWFsIHJ1bGVzIHZpb2xhdGlvbnMuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxjYXRlZ29yeT5CdXNpbmVzcyAvIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+QW1hem9uLCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSwgSW5ub3ZhdGlvbiwgc2VhcmNoIGVuZ2luZXMsIENvcHlyaWdodCwgdGVjaCBwb2xpY3k8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPkRocnV2IE1laHJvdHJhLCBBbmRyZXcgQ291dHM8L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0PkNyYXdsaW5nIEJhY2s8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82NjdkNzg1MTIzZGU3ZDI2MGM0N2VmM2MvbWFzdGVyL3Bhc3MvQW1hem9uLWludmVzdGlnYXRpbmctUGVycGxleGl0eS1TZWN1cml0eS0yUDYxSkY2LmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTYwMSIvPjwvaXRlbT48aXRlbT48dGl0bGU+U3VycHJpc2UhIFRoZSBMYXRlc3Qg4oCYQ29tcHJlaGVuc2l2ZeKAmSBVUyBQcml2YWN5IEJpbGwgSXMgRG9vbWVkPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvYXByYS1wcml2YWN5LWJpbGwtZG9vbWVkLzwvbGluaz48Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPjY2N2M4NmNkZTYzMDE0Y2RlMWJiOWJkMjwvZ3VpZD48cHViRGF0ZT5UaHUsIDI3IEp1biAyMDI0IDE1OjU1OjI0ICswMDAwPC9wdWJEYXRlPjxtZWRpYTpjb250ZW50Lz48ZGVzY3JpcHRpb24+R3V0dGVkIG9mIGNpdmlsIHJpZ2h0cyBwcm90ZWN0aW9ucyBieSBEZW1vY3JhdHMgdG8gd29vIHByby1idXNpbmVzcyBSZXB1YmxpY2FucywgdGhlIEFtZXJpY2FuIFByaXZhY3kgUmlnaHRzIEFjdCB3YXMgcHVsbGVkIGZyb20gYSBrZXkgY29uZ3Jlc3Npb25hbCBoZWFyaW5n4oCUYW5kIGFwcGVhcnMgdW5saWtlbHkgdG8gcmVjZWl2ZSBhIGZ1bGwgdm90ZS48L2Rlc2NyaXB0aW9uPjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gUHJpdmFjeTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gU2VjdXJpdHkgTmV3czwvY2F0ZWdvcnk+PGNhdGVnb3J5PlBvbGl0aWNzIC8gUG9saWN5PC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+cHJpdmFjeSwgc3VydmVpbGxhbmNlLCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSwgUG9saWN5LCBjb25ncmVzczwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+RGVsbCBDYW1lcm9uPC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5SZXJ1bnM8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82NjdkNmM2MzcyOGM1MmRlNTk2ZGIxNDQvbWFzdGVyL3Bhc3MvR2V0dHlJbWFnZXMtMjE1Njc2NzI5MS5qcGciIHdpZHRoPSI0MTA0IiBoZWlnaHQ9IjI3MzYiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPldhciBDcmltZSBQcm9zZWN1dGlvbnMgRW50ZXIgYSBOZXcgRGlnaXRhbCBBZ2U8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9pY2MtaW52ZXN0aWdhdGlvbi1kaWdpdGFsLW1lZGlhLzwvbGluaz48Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPjY1OWM2NmZhOTFiODExNjRjZTY4NDYyZDwvZ3VpZD48cHViRGF0ZT5XZWQsIDI2IEp1biAyMDI0IDE3OjM1OjEwICswMDAwPC9wdWJEYXRlPjxtZWRpYTpjb250ZW50Lz48ZGVzY3JpcHRpb24+QSBjdXN0b20gcGxhdGZvcm0gZGV2ZWxvcGVkIGJ5IFNJVFUgUmVzZWFyY2ggYWlkZWQgdGhlIEludGVybmF0aW9uYWwgQ3JpbWluYWwgQ291cnTigJlzIHByb3NlY3V0aW9uIGluIGEgd2FyIGNyaW1lcyB0cmlhbCBmb3IgdGhlIGZpcnN0IHRpbWUuIEl0IGNvdWxkIGNoYW5nZSBob3cganVzdGljZSBpcyBlbmFjdGVkIG9uIGFuIGludGVybmF0aW9uYWwgc2NhbGUuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIE5hdGlvbmFsIFNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBTZWN1cml0eSBOZXdzPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+d2FyLCBDcmltZSwgcHJpdmFjeSwgcG9saXRpY3MsIHN1cnZlaWxsYW5jZSwgU29jaWFsIE1lZGlhPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5WaXR0b3JpYSBFbGxpb3R0PC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5UcmllZCBhbmQgVHJ1ZTwvZGM6c3ViamVjdD48bWVkaWE6dGh1bWJuYWlsIHVybD0iaHR0cHM6Ly9tZWRpYS53aXJlZC5jb20vcGhvdG9zLzY1YWIxZjZmZTkyMDIyMTg4YzI3YjMxNC9tYXN0ZXIvcGFzcy8wMTE5MjQtc2VjdXJpdHktZGlnaXRhbC1ldmlkZW5jZXMtd2FyLWNyaW1lcy5qcGciIHdpZHRoPSIyNDAwIiBoZWlnaHQ9IjEzNTAiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPlRoZSBKdWxpYW4gQXNzYW5nZSBTYWdhIElzIEZpbmFsbHkgT3ZlcjwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L2p1bGlhbi1hc3NhbmdlLXdpa2lsZWFrcy1wbGVhLWRlYWwvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3YTU0NGU3Njc1ZTQwMjJmMmY5Yzg5PC9ndWlkPjxwdWJEYXRlPlR1ZSwgMjUgSnVuIDIwMjQgMTM6MDk6MjkgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5XaWtpTGVha3MgZm91bmRlciBKdWxpYW4gQXNzYW5nZSBoYXMgYWdyZWVkIHRvIHBsZWFkIGd1aWx0eSB0byBvbmUgY291bnQgb2YgZXNwaW9uYWdlIGluIFVTIGNvdXJ0IG9uIFdlZG5lc2RheSwgZW5kaW5nIGEgeWVhcnMtbG9uZyBsZWdhbCBiYXR0bGUgYmV0d2VlbiB0aGUgVVMgZ292ZXJubWVudCBhbmQgYSBjb250cm92ZXJzaWFsIHB1Ymxpc2hlci48L2Rlc2NyaXB0aW9uPjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gQ3liZXJhdHRhY2tzIGFuZCBIYWNrczwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gTmF0aW9uYWwgU2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5KdWxpYW4gQXNzYW5nZSwgV2lraWxlYWtzLCBlc3Bpb25hZ2UsIENyaW1lLCBqb3VybmFsaXNtLCBuYXRpb25hbCBzZWN1cml0eTwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+RGVsbCBDYW1lcm9uPC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5GcmVlIFByZXNzPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3YTg5MTUzM2VhYzdhNzEwZDZlNmQ5L21hc3Rlci9wYXNzL0dldHR5SW1hZ2VzLTY4NTI2ODc4Ni5qcGciIHdpZHRoPSIzMDAwIiBoZWlnaHQ9IjIwMDAiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPlRoZSBNeXN0ZXJ5IG9mIEFJIEd1bnNob3QtRGV0ZWN0aW9uIEFjY3VyYWN5IElzIEZpbmFsbHkgVW5yYXZlbGluZzwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L2FpLWd1bnNob3QtZGV0ZWN0aW9uLWFjY3VyYWN5LXNhbi1qb3NlLW55Yy88L2xpbms+PGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj42Njc1YWNiMTU0MGVlOTVjOWNhYTRjNzA8L2d1aWQ+PHB1YkRhdGU+VHVlLCAyNSBKdW4gMjAyNCAxMTowMDowMCArMDAwMDwvcHViRGF0ZT48bWVkaWE6Y29udGVudC8+PGRlc2NyaXB0aW9uPkhvdyBhY2N1cmF0ZSBhcmUgZ3Vuc2hvdCBkZXRlY3Rpb24gc3lzdGVtcywgcmVhbGx5PyBGb3IgeWVhcnMsIGl0J3MgYmVlbiBhIHNlY3JldCwgYnV0IG5ldyByZXBvcnRzIGZyb20gU2FuIEpvc2UgYW5kIE5ZQyBzaG93IHRoZXNlIHN5c3RlbXMgaGF2ZSBvcGVyYXRlZCB3ZWxsIGJlbG93IHRoZWlyIGFkdmVydGlzZWQgYWNjdXJhY3kgcmF0ZXMuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFByaXZhY3k8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5wcml2YWN5LCBzdXJ2ZWlsbGFuY2UsIENyaW1lLCBQb2xpY2UsIEd1bnMsIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5Ub2RkIEZlYXRoZXJzPC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5OdW1iZXIgR2FtZXM8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82Njc5ZTdlYTVjNTJlMmM1NjIxYTdmNTcvbWFzdGVyL3Bhc3MvVGhlLU15c3Rlcnktb2YtQUktR3Vuc2hvdC1EZXRlY3Rpb24tQWNjdXJhY3ktSXMtRmluYWxseS1VbnJhdmVsaW5nLVNlY3VyaXR5LUdldHR5SW1hZ2VzLTc3NzM4ODEyLmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTYwMCIvPjwvaXRlbT48aXRlbT48dGl0bGU+RGVlcGZha2UgQ3JlYXRvcnMgQXJlIFJldmljdGltaXppbmcgR2lybHNEb1Bvcm4gU2V4IFRyYWZmaWNraW5nIFN1cnZpdm9yczwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L2dpcmxzZG9wb3JuLWRlZXBmYWtlLXZpY3RpbS12aWRlb3MvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3MTQwNjAxYWQ3Y2QyZWMzNDRjZDZmPC9ndWlkPjxwdWJEYXRlPlR1ZSwgMjUgSnVuIDIwMjQgMTA6MDA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5UaGUgbW9zdCBub3RvcmlvdXMgZGVlcGZha2Ugc2V4dWFsIGFidXNlIHdlYnNpdGUgaXMgaG9zdGluZyBhbHRlcmVkIHZpZGVvcyBvcmlnaW5hbGx5IHB1Ymxpc2hlZCBhcyBwYXJ0IG9mIHRoZSBHaXJsc0RvUG9ybiBvcGVyYXRpb24uIEV4cGVydHMgc2F5IHRoaXMgbmV3IGxvdyBpcyBvbmx5IHRoZSBiZWdpbm5pbmcuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IE5ld3M8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFByaXZhY3k8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5DcmltZSwgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIHBvcm5vZ3JhcGh5LCBwcml2YWN5LCBDb3B5cmlnaHQ8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPk1hdHQgQnVyZ2VzczwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+RmFjZSBTd2FwPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3OWNhODk4OTEyZThkNGRiYmMwNzlkL21hc3Rlci9wYXNzLzA2MjQyNC1zZWN1cml0eS1kZWVwZmFrZXMtc2V4LXRyYWZmaWNraW5nLXN1cnZpdm9ycy5qcGciIHdpZHRoPSIyNDAwIiBoZWlnaHQ9IjEzNTAiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPlJlZCBUYXBlIElzIE1ha2luZyBIb3NwaXRhbCBSYW5zb213YXJlIEF0dGFja3MgV29yc2U8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9yYW5zb213YXJlLWhlYWx0aC1jYXJlLWFzc3VyYW5jZS1sZXR0ZXJzLzwvbGluaz48Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPjY2NzE0MTI5OWZjNjFjY2UyYTlmMjU1ZDwvZ3VpZD48cHViRGF0ZT5Nb24sIDI0IEp1biAyMDI0IDA5OjAwOjAwICswMDAwPC9wdWJEYXRlPjxtZWRpYTpjb250ZW50Lz48ZGVzY3JpcHRpb24+V2l0aCBjeWJlcmF0dGFja3MgaW5jcmVhc2luZ2x5IHRhcmdldGluZyBoZWFsdGggY2FyZSBwcm92aWRlcnMsIGFuIGFyZHVvdXMgYnVyZWF1Y3JhdGljIHByb2Nlc3MgbWVhbnQgdG8gYWRkcmVzcyBsZWdhbCByaXNrIGlzIGtlZXBpbmcgaG9zcGl0YWxzIG9mZmxpbmUgbG9uZ2VyLCBwb3RlbnRpYWxseSByaXNraW5nIGxpdmVzLjwvZGVzY3JpcHRpb24+PGNhdGVnb3J5PlNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBDeWJlcmF0dGFja3MgYW5kIEhhY2tzPC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBTZWN1cml0eSBOZXdzPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+cmFuc29td2FyZSwgaGFja2luZywgY3liZXJzZWN1cml0eSwgbWFsd2FyZSwgdnVsbmVyYWJpbGl0aWVzLCBzZWN1cml0eSwgaGVhbHRoY2FyZTwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+TWF0dCBCdXJnZXNzPC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5EZWxheSBUYWN0aWNzPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3NWQ3ZWFkZWQzOTAwMjFlZWRlYjZiL21hc3Rlci9wYXNzL0dldHR5SW1hZ2VzLTEzMDc2NTY1MDktMy5qcGciIHdpZHRoPSIyNDAwIiBoZWlnaHQ9IjE0NjciLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPkEgQ2F0YXN0cm9waGljIEhvc3BpdGFsIEhhY2sgRW5kcyBpbiBhIExlYWsgb2YgMzAwTSBQYXRpZW50IFJlY29yZHM8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9ob3NwaXRhbC1oYWNrLTMwMC1taWxsaW9uLXBhdGllbnQtcmVjb3Jkcy1sZWFrZWQvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3NWMwODAwNDNmYjMwOWY2MGZhNmUyPC9ndWlkPjxwdWJEYXRlPlNhdCwgMjIgSnVuIDIwMjQgMTA6MzA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5QbHVzOiBBbGxlZ2VkIEFwcGxlIHNvdXJjZSBjb2RlIGxlYWtzIG9ubGluZSwgY3liZXJjcmltZSBncm91cCBTY2F0dGVyZWQgU3BpZGVyJ3MgYWxsZWdlZCBraW5ncGluIGdldHMgYXJyZXN0ZWQsIGFuZCBtb3JlLjwvZGVzY3JpcHRpb24+PGNhdGVnb3J5PlNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBDeWJlcmF0dGFja3MgYW5kIEhhY2tzPC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBOYXRpb25hbCBTZWN1cml0eTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gUHJpdmFjeTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gU2VjdXJpdHkgTmV3czwvY2F0ZWdvcnk+PG1lZGlhOmtleXdvcmRzPnNlY3VyaXR5IHJvdW5kdXAsIGN5YmVyc2VjdXJpdHksIGhhY2tpbmcsIHNlY3VyaXR5LCBtYWx3YXJlLCBuYXRpb25hbCBzZWN1cml0eSwgcHJpdmFjeSwgYXBwbGU8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPkFuZHkgR3JlZW5iZXJnLCBBbmRyZXcgQ291dHM8L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0PlNlY3VyaXR5IFJvdW5kdXA8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82Njc1ZGFlYjNiYzU1MWE0MjAwYzJhOTcvbWFzdGVyL3Bhc3MvTkhTLVBhdGllbnQtUmVjb3JkLUhhY2stU2VjdXJpdHktODY1Mjc4MDMuanBnIiB3aWR0aD0iMjQwMCIgaGVpZ2h0PSIyNDAwIi8+PC9pdGVtPjxpdGVtPjx0aXRsZT5QZXJwbGV4aXR5IFBsYWdpYXJpemVkIE91ciBTdG9yeSBBYm91dCBIb3cgUGVycGxleGl0eSBJcyBhIEJ1bGxzaGl0IE1hY2hpbmU8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9wZXJwbGV4aXR5LXBsYWdpYXJpemVkLW91ci1zdG9yeS1hYm91dC1ob3ctcGVycGxleGl0eS1pcy1hLWJ1bGxzaGl0LW1hY2hpbmUvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3NDI5OWFmMGU0M2UwMWJmNTM1NDUwPC9ndWlkPjxwdWJEYXRlPkZyaSwgMjEgSnVuIDIwMjQgMTc6MjI6NTEgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5FeHBlcnRzIGFyZW7igJl0IHVuYW5pbW91cyBhYm91dCB3aGV0aGVyIHRoZSBBSS1wb3dlcmVkIHNlYXJjaCBzdGFydHVw4oCZcyBwcmFjdGljZXMgY291bGQgZXhwb3NlIGl0IHRvIGxlZ2FsIGNsYWltcyByYW5naW5nIGZyb20gaW5mcmluZ2VtZW50IHRvIGRlZmFtYXRpb27igJRidXQgc29tZSBzYXkgcGxhaW50aWZmcyB3b3VsZCBoYXZlIHN0cm9uZyBjYXNlcy48L2Rlc2NyaXB0aW9uPjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PG1lZGlhOmtleXdvcmRzPkludGVsbGVjdHVhbCBQcm9wZXJ0eSwgQ29weXJpZ2h0LCBhcnRpZmljaWFsIGludGVsbGlnZW5jZTwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+VGltIE1hcmNobWFuPC9kYzpjcmVhdG9yPjxkYzpwdWJsaXNoZXI+Q29uZMOpIE5hc3Q8L2RjOnB1Ymxpc2hlcj48ZGM6c3ViamVjdD5DbG9uZSBXYXJzPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3NGJlNTFiY2VjY2Q0OTg5NGM5MGJjL21hc3Rlci9wYXNzL3NlY3VyaXR5X3BlcnBsZXhpdHlfcGxhZ2lhcml6ZV9zdG9yeS5qcGciIHdpZHRoPSIyNDAwIiBoZWlnaHQ9IjEzNTAiLz48L2l0ZW0+PGl0ZW0+PHRpdGxlPlVTIEJhbnMgS2FzcGVyc2t5IFNvZnR3YXJlPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvdXMtYmFucy1rYXNwZXJza3ktc29mdHdhcmUvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY3NDYwMzJjZjM0NDk1OWQxYTBiZjdjPC9ndWlkPjxwdWJEYXRlPlRodSwgMjAgSnVuIDIwMjQgMjA6MTU6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5Vc2luZyBhIFRydW1wLWVyYSBhdXRob3JpdHksIHRoZSBVUyBDb21tZXJjZSBEZXBhcnRtZW50IGhhcyBiYW5uZWQgdGhlIHNhbGUgb2YgS2FzcGVyc2t54oCZcyBhbnRpdmlydXMgdG9vbHMgdG8gbmV3IGN1c3RvbWVycyBpbiB0aGUgVVMsIGNpdGluZyBhbGxlZ2VkIHRocmVhdHMgdG8gbmF0aW9uYWwgc2VjdXJpdHkuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIE5hdGlvbmFsIFNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBTZWN1cml0eSBOZXdzPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+UnVzc2lhLCBVa3JhaW5lLCBtYWx3YXJlLCBuYXRpb25hbCBzZWN1cml0eSwgY3liZXJzZWN1cml0eSwgSm9lIEJpZGVuPC9tZWRpYTprZXl3b3Jkcz48ZGM6Y3JlYXRvcj5FcmljIEdlbGxlcjwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+VGhyZWF0IERldGVjdGlvbjwvZGM6c3ViamVjdD48bWVkaWE6dGh1bWJuYWlsIHVybD0iaHR0cHM6Ly9tZWRpYS53aXJlZC5jb20vcGhvdG9zLzY2NzQ2NWQyYjNlMDg1NjE2YzgzZjkwNC9tYXN0ZXIvcGFzcy9HZXR0eUltYWdlcy0xMTUyNTQ2ODU5LmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTU5NyIvPjwvaXRlbT48aXRlbT48dGl0bGU+UGVycGxleGl0eSBJcyBhIEJ1bGxzaGl0IE1hY2hpbmU8L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9wZXJwbGV4aXR5LWlzLWEtYnVsbHNoaXQtbWFjaGluZS88L2xpbms+PGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj42NjcwODdmMjE5ZjU5ZTg2ODZjMWFhZjU8L2d1aWQ+PHB1YkRhdGU+V2VkLCAxOSBKdW4gMjAyNCAxMzowMDowMCArMDAwMDwvcHViRGF0ZT48bWVkaWE6Y29udGVudC8+PGRlc2NyaXB0aW9uPkEgV0lSRUQgaW52ZXN0aWdhdGlvbiBzaG93cyB0aGF0IHRoZSBBSS1wb3dlcmVkIHNlYXJjaCBzdGFydHVwIEZvcmJlcyBoYXMgYWNjdXNlZCBvZiBzdGVhbGluZyBpdHMgY29udGVudCBpcyBzdXJyZXB0aXRpb3VzbHkgc2NyYXBpbmfigJRhbmQgbWFraW5nIHRoaW5ncyB1cCBvdXQgb2YgdGhpbiBhaXIuPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5Jbm5vdmF0aW9uLCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSwgc2VhcmNoIGVuZ2luZXM8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPkRocnV2IE1laHJvdHJhLCBUaW0gTWFyY2htYW48L2RjOmNyZWF0b3I+PGRjOnB1Ymxpc2hlcj5Db25kw6kgTmFzdDwvZGM6cHVibGlzaGVyPjxkYzpzdWJqZWN0Pk1hY2hpbmUgTGVhcm5pbmc8L2RjOnN1YmplY3Q+PG1lZGlhOnRodW1ibmFpbCB1cmw9Imh0dHBzOi8vbWVkaWEud2lyZWQuY29tL3Bob3Rvcy82NjcwZGEyZmVkNDE4MzNjOTI4ODY0MDEvbWFzdGVyL3Bhc3MvYnVzaW5lc3NfcGVycGxleGl0eV9haV9wbGFnaWFyaXNtLmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTM1MCIvPjwvaXRlbT48aXRlbT48dGl0bGU+VGhpcyBJcyBXaGF0IFdvdWxkIEhhcHBlbiBpZiBDaGluYSBJbnZhZGVkIFRhaXdhbjwvdGl0bGU+PGxpbms+aHR0cHM6Ly93d3cud2lyZWQuY29tL3N0b3J5L3RoaXMtaXMtd2hhdC13b3VsZC1oYXBwZW4taWYtY2hpbmEtaW52YWRlZC10YWl3YW4vPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY2MGQzNjI1MWU3MDc3NTA2OGJiMzZhPC9ndWlkPjxwdWJEYXRlPldlZCwgMTkgSnVuIDIwMjQgMTA6MDA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5UaGUgbmV3IGJvb2sgV29ybGQgb24gdGhlIEJyaW5rOiBIb3cgQW1lcmljYSBDYW4gQmVhdCBDaGluYSBpbiB0aGUgUmFjZSBmb3IgdGhlIDIxc3QgQ2VudHVyeSBsYXlzIG91dCB3aGF0IG1pZ2h0IGFjdHVhbGx5IGhhcHBlbiBpZiBDaGluYSB3ZXJlIHRvIGludmFkZSBUYWl3YW4gaW4gMjAyOC48L2Rlc2NyaXB0aW9uPjxjYXRlZ29yeT5TZWN1cml0eTwvY2F0ZWdvcnk+PGNhdGVnb3J5PlNlY3VyaXR5IC8gTmF0aW9uYWwgU2VjdXJpdHk8L2NhdGVnb3J5PjxtZWRpYTprZXl3b3Jkcz5DaGluYSwgbnVrZXM8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPkRtaXRyaSBBbHBlcm92aXRjaDwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+TmlnaHRtYXJlIHNjZW5hcmlvPC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY3MjBjMTI2MmJkOWI2ZWE5YzIzZWM2L21hc3Rlci9wYXNzL1RhaXdhbi1JbnZhc2lvbi1FeGNlcnB0LVNlY3VyaXR5LmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTM1MCIvPjwvaXRlbT48aXRlbT48dGl0bGU+SGFja2VycyBEZXRhaWwgSG93IFRoZXkgQWxsZWdlZGx5IFN0b2xlIFRpY2tldG1hc3RlciBEYXRhIEZyb20gU25vd2ZsYWtlPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvZXBhbS1zbm93Zmxha2UtdGlja2V0bWFzdGVyLWJyZWFjaC1zaGlueWh1bnRlcnMvPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY2NzMxNDE3NzE4ZWU4OTgxZjBjMzc3PC9ndWlkPjxwdWJEYXRlPk1vbiwgMTcgSnVuIDIwMjQgMDk6MzA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5BIFNoaW55SHVudGVycyBoYWNrZXIgdGVsbHMgV0lSRUQgdGhhdCB0aGV5IGdhaW5lZCBhY2Nlc3MgdG8gVGlja2V0bWFzdGVy4oCZcyBTbm93Zmxha2UgY2xvdWQgYWNjb3VudOKAlGFuZCBvdGhlcnPigJRieSBmaXJzdCBicmVhY2hpbmcgYSB0aGlyZC1wYXJ0eSBjb250cmFjdG9yLjwvZGVzY3JpcHRpb24+PGNhdGVnb3J5PlNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBDeWJlcmF0dGFja3MgYW5kIEhhY2tzPC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBTZWN1cml0eSBOZXdzPC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+Y3liZXJhdHRhY2tzLCBtYWx3YXJlLCBoYWNrZXJzLCBjeWJlcnNlY3VyaXR5LCBzZWN1cml0eTwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+S2ltIFpldHRlcjwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+V2VhayBQb2ludDwvZGM6c3ViamVjdD48bWVkaWE6dGh1bWJuYWlsIHVybD0iaHR0cHM6Ly9tZWRpYS53aXJlZC5jb20vcGhvdG9zLzY2Njc0MDkwYjQ3NmQ4MTdkYzcxOWFlNy9tYXN0ZXIvcGFzcy9Db250cmFjdG9yLUhhY2stU25vd2ZsYWtlLVNlY3VyaXR5LTE0NTk5Njk2ODEuanBnIiB3aWR0aD0iMjQwMCIgaGVpZ2h0PSIxNjAwIi8+PC9pdGVtPjxpdGVtPjx0aXRsZT5BbWF6b24tUG93ZXJlZCBBSSBDYW1lcmFzIFVzZWQgdG8gRGV0ZWN0IEVtb3Rpb25zIG9mIFVud2l0dGluZyBVSyBUcmFpbiBQYXNzZW5nZXJzPC90aXRsZT48bGluaz5odHRwczovL3d3dy53aXJlZC5jb20vc3RvcnkvYW1hem9uLWFpLWNhbWVyYXMtZW1vdGlvbnMtdWstdHJhaW4tcGFzc2VuZ2Vycy88L2xpbms+PGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj42NjZhYzhmOGNmZDlkN2U2MTg2NWIwYjk8L2d1aWQ+PHB1YkRhdGU+TW9uLCAxNyBKdW4gMjAyNCAwNzowMDowMCArMDAwMDwvcHViRGF0ZT48bWVkaWE6Y29udGVudC8+PGRlc2NyaXB0aW9uPkNDVFYgY2FtZXJhcyBhbmQgQUkgYXJlIGJlaW5nIGNvbWJpbmVkIHRvIG1vbml0b3IgY3Jvd2RzLCBkZXRlY3QgYmlrZSB0aGVmdHMsIGFuZCBzcG90IHRyZXNwYXNzZXJzLjwvZGVzY3JpcHRpb24+PGNhdGVnb3J5PlNlY3VyaXR5PC9jYXRlZ29yeT48Y2F0ZWdvcnk+U2VjdXJpdHkgLyBQcml2YWN5PC9jYXRlZ29yeT48bWVkaWE6a2V5d29yZHM+YXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIHByaXZhY3ksIG1hY2hpbmUgbGVhcm5pbmc8L21lZGlhOmtleXdvcmRzPjxkYzpjcmVhdG9yPk1hdHQgQnVyZ2VzczwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+dHJhaW5zcG90dGluZzwvZGM6c3ViamVjdD48bWVkaWE6dGh1bWJuYWlsIHVybD0iaHR0cHM6Ly9tZWRpYS53aXJlZC5jb20vcGhvdG9zLzY2NmM3ZWE1MjA4M2U3Mjg1NzhlODIzMy9tYXN0ZXIvcGFzcy9HZXR0eUltYWdlcy0xNjYzNTQ1Njg5LmpwZyIgd2lkdGg9IjI0MDAiIGhlaWdodD0iMTUwMSIvPjwvaXRlbT48aXRlbT48dGl0bGU+SG93IHRvIFNwb3QgYSBCdXNpbmVzcyBFbWFpbCBDb21wcm9taXNlIFNjYW08L3RpdGxlPjxsaW5rPmh0dHBzOi8vd3d3LndpcmVkLmNvbS9zdG9yeS9ob3ctdG8tc3BvdC1idXNpbmVzcy1lbWFpbC1jb21wcm9taXNlLXNjYW0vPC9saW5rPjxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+NjY2YjRhNjFlYTViMmU2ZjAxNTk5NzRmPC9ndWlkPjxwdWJEYXRlPlN1biwgMTYgSnVuIDIwMjQgMTI6MDA6MDAgKzAwMDA8L3B1YkRhdGU+PG1lZGlhOmNvbnRlbnQvPjxkZXNjcmlwdGlvbj5JbiB0aGlzIGNvbW1vbiBlbWFpbCBzY2FtLCBhIGNyaW1pbmFsIHByZXRlbmRpbmcgdG8gYmUgeW91ciBib3NzIG9yIGNvd29ya2VyIGVtYWlscyB5b3UgYXNraW5nIGZvciBhIGZhdm9yIGludm9sdmluZyBtb25leS4gSGVyZeKAmXMgd2hhdCBkbyB0byB3aGVuIGEgYmFkIGFjdG9yIGxhbmRzIGluIHlvdXIgaW5ib3guPC9kZXNjcmlwdGlvbj48Y2F0ZWdvcnk+U2VjdXJpdHk8L2NhdGVnb3J5PjxjYXRlZ29yeT5TZWN1cml0eSAvIFNlY3VyaXR5IEFkdmljZTwvY2F0ZWdvcnk+PG1lZGlhOmtleXdvcmRzPnBoaXNoaW5nLCBlbWFpbCwgc2VjdXJpdHksIGhvdy10bzwvbWVkaWE6a2V5d29yZHM+PGRjOmNyZWF0b3I+SnVzdGluIFBvdDwvZGM6Y3JlYXRvcj48ZGM6cHVibGlzaGVyPkNvbmTDqSBOYXN0PC9kYzpwdWJsaXNoZXI+PGRjOnN1YmplY3Q+VXJnZW50PC9kYzpzdWJqZWN0PjxtZWRpYTp0aHVtYm5haWwgdXJsPSJodHRwczovL21lZGlhLndpcmVkLmNvbS9waG90b3MvNjY2Y2JiNTllYjlkYjNhM2U5NWM2NTMzL21hc3Rlci9wYXNzL0hvdy10by1TcG90LWEtQnVzaW5lc3MtRW1haWwtQ29tcHJvbWlzZS1TY2FtLVNlY3VyaXR5LUdldHR5SW1hZ2VzLTEyODc0NTY3ODYuanBnIiB3aWR0aD0iMjQwMCIgaGVpZ2h0PSIxODAwIi8+PC9pdGVtPjwvY2hhbm5lbD48L3Jzcz4=
  recorded_at: Mon, 01 Jul 2024 20:10:24 GMT
recorded_with: VCR 6.2.0
